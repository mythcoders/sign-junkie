.row
  .col-4
    = form_for @order, url: order_path(@order), method: :patch do |f|
      .card.card-primary
        %h4.card-header.bg-primary.text-white
          = fa_regular 'shopping-bag'
          = "Order ##{@order.order_number}"
        .card-body
          - if @order.placed?
            .form-group
              %label Date Placed
              .form-control-plaintext= @order.date_placed
          .form-group
            %label Billing Address
            %br
            .input-group
              = f.select(:address_id,
                @addresses.collect { |r| [ r[:nickname], r[:id] ] },
                { include_blank: ' - Select - ' },
                { class: 'custom-select', 'data-js-billing-address': '' })
              .input-group-append
                %a.btn.btn-outline-secondary{href: new_address_path}
                  = fa_light 'plus'
          .form-group
            %label Payment Method
            = f.select(:payment_method,
              ApplicationHelper::PAYMENT_METHODS.collect { |r| [ r[:name], r[:id] ] },
              { include_blank: ' - Select - ' },
              { class: 'custom-select', 'data-js-payment-method': ''  })
        .card-footer
          %button{type: 'submit', name: 'save', class: 'btn btn-sm btn-outline-success'}
            Save
          - if @order.ready_for_payment?
            %button{type: 'submit', name: 'pay', class: 'btn btn-sm btn-outline-primary'}
              Save and pay
              = fa_regular 'shopping-cart'
          - if @order.can_be_caneled?
            %button{type: 'submit', name: 'cancel', class: 'btn btn-sm btn-outline-danger float-right'}
              Cancel
  .col-8
    = error_messages_for 'order'
    = error_messages_for 'payment'

    .card
      %h4.card-header.bg-primary.text-white
        = fa_regular 'th-list'
        Items
      .table-responsive-md
        %table.table.table-striped.table-bordered.table-border-fix
          %thead
            %tr.bg-primary.text-white
              %th Event
              %th.action-column Amount
              %th.action-column Quantity
              %th.action-column Price
          %tbody
            - @order.items.order(:created_at).each do |i|
              %tr
                %td= i.name
                %td= number_to_currency(i.price)
                %td= i.quantity
                %td.text-right
                  %strong= number_to_currency(i.item_total)
            - if @order.taxed?
              %tr
                %td{colspan: 3} Estimated tax to be collected
                %td.text-right
                  %strong= number_to_currency(@order.total_tax)
          %tfoot
            %tr.bg-primary.text-white
              %td.text-right{colspan: 4}
                %strong= number_to_currency(@order.total_due)